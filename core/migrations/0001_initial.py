# Generated by Django 5.2.5 on 2025-08-24 08:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_key', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'process_model',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'portfolio',
            },
        ),
        migrations.CreateModel(
            name='ProcessModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_label', models.CharField(max_length=50)),
                ('external_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='core.processmodel')),
            ],
            options={
                'db_table': 'process_model_version',
                'unique_together': {('model', 'version_label')},
            },
        ),
        migrations.CreateModel(
            name='ProcessNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('materialized_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('model_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='core.processmodelversion')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.processnode')),
            ],
            options={
                'db_table': 'process_node',
            },
        ),
        migrations.CreateModel(
            name='NodeUsecaseCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_uid', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('impact_assessment', models.TextField(blank=True, null=True)),
                ('complexity_score', models.IntegerField(blank=True, null=True)),
                ('meta_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usecase_candidates', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usecase_candidates', to='core.processnode')),
            ],
            options={
                'db_table': 'node_usecase_candidate',
            },
        ),
        migrations.CreateModel(
            name='NodeRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(max_length=50)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relationships', to='core.processnode')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relationships', to='core.processnode')),
            ],
            options={
                'db_table': 'node_relationship',
            },
        ),
        migrations.CreateModel(
            name='NodeEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embedding_vector', models.JSONField()),
                ('embedding_model', models.CharField(default='text-embedding-3-small', max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='embedding', to='core.processnode')),
            ],
            options={
                'db_table': 'node_embedding',
            },
        ),
        migrations.CreateModel(
            name='NodeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('process_details', 'Process Details'), ('usecase_spec', 'Use Case Specification'), ('research_summary', 'Research Summary')], max_length=50)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField()),
                ('meta_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.processnode')),
            ],
            options={
                'db_table': 'node_document',
            },
        ),
        migrations.CreateModel(
            name='NodeBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='core.processnode')),
            ],
            options={
                'db_table': 'node_bookmark',
            },
        ),
        migrations.CreateModel(
            name='NodeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.TextField(blank=True, null=True)),
                ('data_type', models.CharField(default='text', max_length=20)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='core.processnode')),
            ],
            options={
                'db_table': 'node_attribute',
            },
        ),
        migrations.CreateModel(
            name='SourceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_type', models.CharField(blank=True, max_length=50, null=True)),
                ('checksum', models.CharField(blank=True, max_length=128, null=True)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('model_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.processmodelversion')),
            ],
            options={
                'db_table': 'source_document',
            },
        ),
        migrations.CreateModel(
            name='UsecaseResearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_query', models.CharField(blank=True, max_length=500, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('web_results', models.JSONField(blank=True, null=True)),
                ('synthesis_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_runs', to='core.nodedocument')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_runs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usecase_research',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='light', max_length=20)),
                ('settings_json', models.JSONField(default=dict)),
                ('preferred_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.processmodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_settings',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.portfolio')),
                ('usecase_candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_items', to='core.nodeusecasecandidate')),
            ],
            options={
                'db_table': 'portfolio_item',
                'unique_together': {('portfolio', 'usecase_candidate')},
            },
        ),
        migrations.CreateModel(
            name='ModelAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_access', to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_access', to='core.processmodel')),
            ],
            options={
                'db_table': 'model_access',
                'unique_together': {('user', 'model')},
            },
        ),
        migrations.AddIndex(
            model_name='processnode',
            index=models.Index(fields=['parent'], name='process_nod_parent__1e0dc1_idx'),
        ),
        migrations.AddIndex(
            model_name='processnode',
            index=models.Index(fields=['model_version'], name='process_nod_model_v_7c093d_idx'),
        ),
        migrations.AddIndex(
            model_name='processnode',
            index=models.Index(fields=['code'], name='process_nod_code_e6a261_idx'),
        ),
        migrations.AddIndex(
            model_name='processnode',
            index=models.Index(fields=['level'], name='process_nod_level_7be385_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='processnode',
            unique_together={('model_version', 'code')},
        ),
        migrations.AddIndex(
            model_name='nodeusecasecandidate',
            index=models.Index(fields=['node', 'user'], name='node_usecas_node_id_e44084_idx'),
        ),
        migrations.AddIndex(
            model_name='nodeusecasecandidate',
            index=models.Index(fields=['candidate_uid'], name='node_usecas_candida_63a7d1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='noderelationship',
            unique_together={('from_node', 'to_node', 'relationship_type')},
        ),
        migrations.AddIndex(
            model_name='nodedocument',
            index=models.Index(fields=['node', 'user'], name='node_docume_node_id_b12040_idx'),
        ),
        migrations.AddIndex(
            model_name='nodedocument',
            index=models.Index(fields=['document_type'], name='node_docume_documen_bd3724_idx'),
        ),
        migrations.AddIndex(
            model_name='nodedocument',
            index=models.Index(fields=['created_at'], name='node_docume_created_e99288_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='nodebookmark',
            unique_together={('node', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='nodeattribute',
            unique_together={('node', 'key')},
        ),
    ]
